! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : saprc99.map
! Time                 : Tue Feb 27 19:32:50 2018
! Working directory    : /home/zhuangjw/KPP/my_tests/saprc99/saprc99_code
! Equation file        : saprc99.kpp
! Output root filename : saprc99
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 79 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 74 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 66 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 5 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 211 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 75 

### Species -------------------------------------------

Variable species
  1 = H2SO4 (n)  26 = COOH (r)   51 = OLE1 (r)  
  2 = HCOOH (n)  27 = HOCOO (r)  52 = ISOPROD (r)
  3 = CCO_OH (n) 28 = BZNO2_O (r) 53 = OLE2 (r)  
  4 = RCO_OH (n) 29 = MEOH (r)   54 = MVK (r)   
  5 = CCO_OOH (n) 30 = ALK4 (r)   55 = CCHO (r)  
  6 = RCO_OOH (n) 31 = ARO1 (r)   56 = HCHO (r)  
  7 = XN (n)     32 = DCB2 (r)   57 = RNO3 (r)  
  8 = XC (n)     33 = DCB3 (r)   58 = O3P (r)   
  9 = SO2 (r)    34 = CRES (r)   59 = RCHO (r)  
 10 = O1D (r)    35 = DCB1 (r)   60 = MEK (r)   
 11 = ALK1 (r)   36 = NPHE (r)   61 = PROD2 (r) 
 12 = BACL (r)   37 = ROOH (r)   62 = O3 (r)    
 13 = PAN (r)    38 = BALD (r)   63 = HO2 (r)   
 14 = PAN2 (r)   39 = PHEN (r)   64 = RO2_N (r) 
 15 = PBZN (r)   40 = CO (r)     65 = MA_RCO3 (r)
 16 = MA_PAN (r) 41 = MGLY (r)   66 = C_O2 (r)  
 17 = H2O2 (r)   42 = ACET (r)   67 = BZCO_O2 (r)
 18 = N2O5 (r)   43 = HNO3 (r)   68 = RO2_R (r) 
 19 = HONO (r)   44 = ETHENE (r) 69 = NO (r)    
 20 = ALK2 (r)   45 = GLY (r)    70 = NO2 (r)   
 21 = ALK3 (r)   46 = BZ_O (r)   71 = NO3 (r)   
 22 = TBU_O (r)  47 = ISOPRENE (r) 72 = CCO_O2 (r)
 23 = ALK5 (r)   48 = R2O2 (r)   73 = RCO_O2 (r)
 24 = ARO2 (r)   49 = TERP (r)   74 = OH (r)    
 25 = HNO4 (r)   50 = METHACRO (r)

Fixed species
  1 = AIR (r)     3 = H2O (r)     5 = CH4 (r)   
  2 = O2 (r)      4 = H2 (r)    

### Subroutines ---------------------------------------

SUBROUTINE Fun ( V, F, RCT, Vdot )
SUBROUTINE Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Hessian ( V, F, RCT, HESS )
SUBROUTINE HessTR_Vec ( HESS, U1, U2, HTU )
SUBROUTINE Hess_Vec ( HESS, U1, U2, HU )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
SUBROUTINE ReactantProd ( V, F, ARP )
SUBROUTINE JacReactantProd ( V, F, JVRP )
