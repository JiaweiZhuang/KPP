C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C The ODE Jacobian of Chemical Model File                          
C                                                                  
C Generated by KPP-2.2.3 symbolic chemistry Kinetics PreProcessor  
C       (http://www.cs.vt.edu/~asandu/Software/KPP)                
C KPP is distributed under GPL, the general public licence         
C       (http://www.gnu.org/copyleft/gpl.html)                     
C (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa           
C (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech            
C     With important contributions from:                           
C        M. Damian, Villanova University, USA                      
C        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
C                                                                  
C File                 : small_strato_Jacobian.f                   
C Time                 : Sat Feb 24 03:01:25 2018                  
C Working directory    : /home/zhuangjw/KPP/my_tests/small_strato_f77
C Equation file        : small_strato.kpp                          
C Output root filename : small_strato                              
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Jac_SP - the Jacobian of Variables in sparse matrix representation
C   Arguments :                                                    
C      V         - Concentrations of variable species (local)      
C      F         - Concentrations of fixed species (local)         
C      RCT       - Rate constants (local)                          
C      JVS       - sparse Jacobian of variables                    
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Jac_SP ( V, F, RCT, JVS )

      IMPLICIT NONE
      INCLUDE 'small_strato_Parameters.h'

C V - Concentrations of variable species (local)                   
      REAL*8 V(NVAR)
C F - Concentrations of fixed species (local)                      
      REAL*8 F(NFIX)
C RCT - Rate constants (local)                                     
      REAL*8 RCT(NREACT)
C JVS - sparse Jacobian of variables                               
      REAL*8 JVS(LU_NONZERO)


C Local variables                                                  
C B - Temporary array                                              
      REAL*8 B(16)

C B(2) = dA(2)/dV(2)                                               
      B(2) = RCT(2)*F(2)
C B(4) = dA(3)/dV(3)                                               
      B(4) = RCT(3)
C B(5) = dA(4)/dV(2)                                               
      B(5) = RCT(4)*V(3)
C B(6) = dA(4)/dV(3)                                               
      B(6) = RCT(4)*V(2)
C B(7) = dA(5)/dV(3)                                               
      B(7) = RCT(5)
C B(8) = dA(6)/dV(1)                                               
      B(8) = RCT(6)*F(1)
C B(10) = dA(7)/dV(1)                                              
      B(10) = RCT(7)*V(3)
C B(11) = dA(7)/dV(3)                                              
      B(11) = RCT(7)*V(1)
C B(12) = dA(8)/dV(3)                                              
      B(12) = RCT(8)*V(4)
C B(13) = dA(8)/dV(4)                                              
      B(13) = RCT(8)*V(3)
C B(14) = dA(9)/dV(2)                                              
      B(14) = RCT(9)*V(5)
C B(15) = dA(9)/dV(5)                                              
      B(15) = RCT(9)*V(2)
C B(16) = dA(10)/dV(5)                                             
      B(16) = RCT(10)

C Construct the Jacobian terms from B's                            
C JVS(1) = Jac_FULL(1,1)                                           
      JVS(1) = -B(8)-B(10)
C JVS(2) = Jac_FULL(1,3)                                           
      JVS(2) = B(7)-B(11)
C JVS(3) = Jac_FULL(2,1)                                           
      JVS(3) = B(8)
C JVS(4) = Jac_FULL(2,2)                                           
      JVS(4) = -B(2)-B(5)-B(14)
C JVS(5) = Jac_FULL(2,3)                                           
      JVS(5) = B(4)-B(6)
C JVS(6) = Jac_FULL(2,5)                                           
      JVS(6) = -B(15)+B(16)
C JVS(7) = Jac_FULL(3,1)                                           
      JVS(7) = -B(10)
C JVS(8) = Jac_FULL(3,2)                                           
      JVS(8) = B(2)-B(5)
C JVS(9) = Jac_FULL(3,3)                                           
      JVS(9) = -B(4)-B(6)-B(7)-B(11)-B(12)
C JVS(10) = Jac_FULL(3,4)                                          
      JVS(10) = -B(13)
C JVS(11) = Jac_FULL(3,5)                                          
      JVS(11) = 0
C JVS(12) = Jac_FULL(4,2)                                          
      JVS(12) = B(14)
C JVS(13) = Jac_FULL(4,3)                                          
      JVS(13) = -B(12)
C JVS(14) = Jac_FULL(4,4)                                          
      JVS(14) = -B(13)
C JVS(15) = Jac_FULL(4,5)                                          
      JVS(15) = B(15)+B(16)
C JVS(16) = Jac_FULL(5,2)                                          
      JVS(16) = -B(14)
C JVS(17) = Jac_FULL(5,3)                                          
      JVS(17) = B(12)
C JVS(18) = Jac_FULL(5,4)                                          
      JVS(18) = B(13)
C JVS(19) = Jac_FULL(5,5)                                          
      JVS(19) = -B(15)-B(16)
      RETURN
      END

C End of Jac_SP function                                           
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C Jac_SP_Vec - function for sparse multiplication: sparse Jacobian times vector
C   Arguments :                                                    
C      JVS       - sparse Jacobian of variables                    
C      UV        - User vector for variables                       
C      JUV       - Jacobian times user vector                      
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )

      IMPLICIT NONE
      INCLUDE 'small_strato_Parameters.h'

C JVS - sparse Jacobian of variables                               
      REAL*8 JVS(LU_NONZERO)
C UV - User vector for variables                                   
      REAL*8 UV(NVAR)
C JUV - Jacobian times user vector                                 
      REAL*8 JUV(NVAR)

      JUV(1) = JVS(1)*UV(1)+JVS(2)*UV(3)
      JUV(2) = JVS(3)*UV(1)+JVS(4)*UV(2)+JVS(5)*UV(3)+JVS(6)*UV(5)
      JUV(3) = JVS(7)*UV(1)+JVS(8)*UV(2)+JVS(9)*UV(3)+JVS(10)*UV(4)
      JUV(4) = JVS(12)*UV(2)+JVS(13)*UV(3)+JVS(14)*UV(4)+JVS(15)*UV(5)
      JUV(5) = JVS(16)*UV(2)+JVS(17)*UV(3)+JVS(18)*UV(4)+JVS(19)*UV(5)
      RETURN
      END

C End of Jac_SP_Vec function                                       
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C                                                                  
C JacTR_SP_Vec - sparse multiplication: sparse Jacobian transposed times vector
C   Arguments :                                                    
C      JVS       - sparse Jacobian of variables                    
C      UV        - User vector for variables                       
C      JTUV      - Jacobian transposed times user vector           
C                                                                  
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

      SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )

      IMPLICIT NONE
      INCLUDE 'small_strato_Parameters.h'

C JVS - sparse Jacobian of variables                               
      REAL*8 JVS(LU_NONZERO)
C UV - User vector for variables                                   
      REAL*8 UV(NVAR)
C JTUV - Jacobian transposed times user vector                     
      REAL*8 JTUV(NVAR)

      JTUV(1) = JVS(1)*UV(1)+JVS(3)*UV(2)+JVS(7)*UV(3)
      JTUV(2) = JVS(4)*UV(2)+JVS(8)*UV(3)+JVS(12)*UV(4)+JVS(16)*UV(5)
      JTUV(3) = JVS(2)*UV(1)+JVS(5)*UV(2)+JVS(9)*UV(3)+JVS(13)*UV(4)
     &         +JVS(17)*UV(5)
      JTUV(4) = JVS(10)*UV(3)+JVS(14)*UV(4)+JVS(18)*UV(5)
      JTUV(5) = JVS(6)*UV(2)+JVS(15)*UV(4)+JVS(19)*UV(5)
      RETURN
      END

C End of JacTR_SP_Vec function                                     
C ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


